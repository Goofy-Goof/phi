name: ci

on: [push, pull_request]
    
jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: phi
          POSTGRES_USER: phi
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Cache
      uses: actions/cache@v2.1.4
      env:
        cache-name: cache
      with:
        path: |
          ~/.cache/bazelisk
          ~/.cache/bazel
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.cache-name }}-v2

    - name: Setup go 
      uses: actions/setup-go@master
      with:
        go-version: "1.17.7"

    - name: Clone
      uses: actions/checkout@v2

    - name: Build
      run: make build

    - name: Test
      run: DATABASE_URL=postgres://phi:phi@localhost:5432/phi make test

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push containers
      run: make push

    - name: Release containers
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      run: VERSION=${{github.ref_name}} make push

    - name: Build binaries
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      run: |
        go get github.com/mitchellh/gox
        gox -osarch="linux/amd64 linux/arm64 darwin/amd64 darwin/arm64 windows/amd64 windows/arm64" ./go/cmd/phi/

    - name: Release binaries
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          phi_*

  cd:
    needs: ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Deploy auth
      uses: superfly/flyctl-actions@1.3
      with:
        args: "deploy -c ./fly/auth.toml -i ghcr.io/clstb/phi-auth:${{github.ref_name}}"

    - name: Deploy tinkgw
      uses: superfly/flyctl-actions@1.3
      with:
        args: "deploy -c ./fly/tinkgw.toml -i ghcr.io/clstb/phi-tinkgw:${{github.ref_name}}"